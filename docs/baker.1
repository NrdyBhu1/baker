.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "Baker" "1" "July 2022" "Baker 1.0.0" ""
.hy
.SH NAME
.PP
Baker - A simple build automation tool.
.SH SYNOPSIS
.PP
\f[B]bake\f[R] [\f[I]OPTIONS\f[R]]
.SH DESCRIPTION
.PP
Baker is a simple build automation tool configured via TOML.
.SH OPTIONS
.TP
\f[B]-h\f[R], \f[B]\[en]help\f[R]
Help command
.TP
\f[B]-v\f[R], \f[B]\[en]version\f[R]
Check version
.TP
\f[B]-c\f[R], \f[B]\[en]commands\f[R]
List commands
.TP
\f[B][command]\f[R]
Run a command
.SH CONFIGURATION
.PP
Baker looks for a \f[B]recipe.toml\f[R] in the root directory.
If it doesn\[cq]t find one, it generates one:
.IP
.nf
\f[C]
[build]
cmd = \[dq]\[dq]
\f[R]
.fi
.PP
\f[B]build\f[R] is executed when the binary is invoked without any
flags.
.SS CUSTOM COMMANDS
.PP
Custom commands can be set using \f[B]custom\f[R].
.IP
.nf
\f[C]
[[custom]]
name = \[dq]clean\[dq] # name of cmd
cmd = \[dq]cargo clean\[dq] # cmd
run = false # if it should run after build is executed
\f[R]
.fi
.PP
You can also run custom commands directly by invoking baker with the
name of the command as the argument.
.PP
Example:
.IP
.nf
\f[C]
bake clean
\f[R]
.fi
.SS RUNNING COMMANDS BEFORE BUILD
.PP
You can also run commands before build using \f[B]pre\f[R].
.IP
.nf
\f[C]
[[pre]]
name = \[dq]fmt\[dq]
cmd = \[dq]cargo fmt\[dq]
\f[R]
.fi
.SS RECURSION
.PP
Baker also supports recursion (invoking baker inside baker):
.PP
Example:
.IP
.nf
\f[C]
[[custom]]
name = \[dq]docs\[dq]
cmd = \[dq]pandoc docs/baker.1.md -s -t man -o docs/baker.1\[dq]
run = false

[[custom]]
name = \[dq]view-docs\[dq]
cmd =\[dq]bake docs && man ./docs/baker.1\[dq]
run = false
\f[R]
.fi
.PP
Running \f[B]bake view-docs\f[R] will run \f[B]bake docs\f[R] and view
the man page.
.SH AUTHORS
rv178.
